/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Array of message parts, each with type and corresponding data.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MessageParts".
 */
export type MessageParts =
  | {
      type: 'text' | 'tool-invocation';
      text?: string | null;
      toolInvocation?: ToolInvocationPart;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    texts: Text;
    embeddings: Embedding;
    workflows: Workflow;
    chat_sessions: ChatSession;
    applications: Application;
    messages: Message;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    texts: TextsSelect<false> | TextsSelect<true>;
    embeddings: EmbeddingsSelect<false> | EmbeddingsSelect<true>;
    workflows: WorkflowsSelect<false> | WorkflowsSelect<true>;
    chat_sessions: ChatSessionsSelect<false> | ChatSessionsSelect<true>;
    applications: ApplicationsSelect<false> | ApplicationsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Stores chunks of text content, often used for knowledge base.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "texts".
 */
export interface Text {
  id: number;
  content: string;
  application: number | Application;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "applications".
 */
export interface Application {
  id: number;
  name: string;
  description: string;
  version?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "embeddings".
 */
export interface Embedding {
  id: number;
  content: string;
  embedding:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  sourceText: number | Text;
  updatedAt: string;
  createdAt: string;
}
/**
 * Stores sequences of actions for automation.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows".
 */
export interface Workflow {
  id: number;
  name: string;
  description?: string | null;
  /**
   * A step-by-step natural language description of the entire workflow sequence, intended for LLM guidance.
   */
  sequenceDescription?: string | null;
  application: number | Application;
  steps?:
    | {
        action:
          | 'screenshot'
          | 'left_click'
          | 'right_click'
          | 'middle_click'
          | 'double_click'
          | 'left_click_drag'
          | 'mouse_move'
          | 'type'
          | 'key'
          | 'cursor_position';
        /**
         * Describe the goal and context of this step clearly (e.g., "Click the Save button to submit the form").
         */
        description: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Represents a single chat conversation or automation session.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat_sessions".
 */
export interface ChatSession {
  id: number;
  name: string;
  application: number | Application;
  updatedAt: string;
  createdAt: string;
}
/**
 * Stores individual messages within a chat session, including tool interactions.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: number;
  chatSession: number | ChatSession;
  role: 'user' | 'assistant' | 'tool';
  /**
   * The final textual content of the message.
   */
  content?: string | null;
  parts?: MessageParts;
  revisionId?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Details of a tool invocation within the message parts.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolInvocationPart".
 */
export interface ToolInvocationPart {
  state?: ('result' | 'pending' | 'error') | null;
  step?: number | null;
  toolCallId: string;
  toolName: string;
  args?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  result?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'texts';
        value: number | Text;
      } | null)
    | ({
        relationTo: 'embeddings';
        value: number | Embedding;
      } | null)
    | ({
        relationTo: 'workflows';
        value: number | Workflow;
      } | null)
    | ({
        relationTo: 'chat_sessions';
        value: number | ChatSession;
      } | null)
    | ({
        relationTo: 'applications';
        value: number | Application;
      } | null)
    | ({
        relationTo: 'messages';
        value: number | Message;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "texts_select".
 */
export interface TextsSelect<T extends boolean = true> {
  content?: T;
  application?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "embeddings_select".
 */
export interface EmbeddingsSelect<T extends boolean = true> {
  content?: T;
  embedding?: T;
  sourceText?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workflows_select".
 */
export interface WorkflowsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  sequenceDescription?: T;
  application?: T;
  steps?:
    | T
    | {
        action?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat_sessions_select".
 */
export interface ChatSessionsSelect<T extends boolean = true> {
  name?: T;
  application?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "applications_select".
 */
export interface ApplicationsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  version?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  chatSession?: T;
  role?: T;
  content?: T;
  parts?: T | MessagePartsSelect<T>;
  revisionId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MessageParts_select".
 */
export interface MessagePartsSelect<T extends boolean = true> {
  type?: T;
  text?: T;
  toolInvocation?: T | ToolInvocationPartSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ToolInvocationPart_select".
 */
export interface ToolInvocationPartSelect<T extends boolean = true> {
  state?: T;
  step?: T;
  toolCallId?: T;
  toolName?: T;
  args?: T;
  result?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}